纯函数: 

  1, 自始至终返回相同的值
  2, 不使用全局变量
  3, 不应该修改程序的状态或者是引起副作用 , 比如修改全局变量

  可以更好地进行组合, 调试

科里化: 



函数组合子: 

  1, 


尾调用优化

尾递归


1, 尾递归: 

  普通递归时, 内存需要记录调用的栈所处的深度和位置信息, 在最底层计算返回值, 
  再根据记录的信息, 跳回上一层级计算, 然后再跳回更高一层, 一次运行
  直到最外层的函数执行, 深度太大时, 会出现内存溢出

  如果把上一次函数运行的结果返回出来, 直接拿到上一次调用的结果, 就不会留下堆栈信息


  在函数的最后一步 调用自身


  /////////

范畴  容器

  createStore ==> 相当于 创建了一个容器

  容器里面包含了值和变形关系, value, actions
  变形关系可以依次作用于每一个值, 讲当前容器变性成另外一个容器

  当 action 作用于自己的state 返回一个新的 state

